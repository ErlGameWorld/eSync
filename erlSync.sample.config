[
   {erlSync, [
      %% 扫描module的间隔时间
      {moduleTime, 30000},
      %% 扫描 源码目录的间隔时间
      {srcDirTime, 5000},
      %% 扫描 源码文件的间隔时间
      {srcFileTime, 5000},
      %% 对比加载beam 文件的间隔时间
      {compareBeamTime, 3000},
      %% 对比编译erl hrl文件的间隔时间
      {compareSrcFileTime, 1000},

      %% 编译和加载以及其他一些日志的提示级别设置
      %% 有效值: all | none | [success | warnings | errors]
      %% 默认值: all
      {log, all},

      %% 这个参数用于设置特殊目录下的文件检查编译与加载
      %% 格式:{srcDirs, {strategy(), [srcDirDescr()]}} | {srcDirs, undefined}
      %% -type strategy() :: add | only.
      %% 如果 strategy() is only, 仅仅扫描指定目录下的文件编译与加载. 如果 strategy() is add,  会扫描添加的指定目录同步编译与加载.
      %% -type srcDirDescr() :: { Dir :: file:filename(), [Options :: compile_option()]}.
      %% 默认值：undefined 根据当前工作目录 和 已经加载的模块做来得出需要扫描的目录
      {srcDirs, {strategy(), [srcDirDescr()]}},

      %% 这个参数用来设置 怎么处理 当beam文件的源文件目录不是当前工作的子目录时的情况
      %% 有效值： fix | allow | ignore
      %% * fix = 尝试在当前目录下查找源文件
      %% * allow = 不要做任何特别的事情，使用beam源文件原始路径查找该文件
      %% * ignore = 而忽略对其源路径的任何更改
      %% 默认值: fix
      {descendant, fix},

      %% 仅仅同步编译和加载该参数指定的模块
      %% default: [] 为空的时候 该参数无效
      {onlyMods, []},

      %% 不同步编译和加载该参数指定的模块
      %% default: [] 为空的时候 该参数无效
      {excludedMods, []}
   ]}
].


