[
   {eSync, [
      %% Compilation commands Support the compilation commands that come with the project, or you can use the compilation logic that comes with the project
      %% "rebar3 compile" | "start compile.bat" | "make"
      {compileCmd, undefined},

      %% Compile and load and some other log prompt level settings
      %% value list: all | none | [success | warnings | errors]
      %% Defaults value: all
      {log, all},

      %% 这个参数用于设置特殊目录下的文件检查编译与加载
	  %% This parameter is used to check the compilation and loading of files in a special directory
      %% Format: {extraDirs, [{strategy(), [srcDirDescr()]}] | undefined}
      %% -type strategy() :: only | del | addExtra | addOnly.
      %% if strategy() when addExtra,  It will unconditionally monitor the synchronized compilation and loading of the added specified directory and its subdirectories.
      %% if strategy() when addOnly,   It will unconditionally monitor the added specified directory (excluding subdirectories) to compile and load synchronously.
      %% if strategy() when only, Only monitor the compilation and loading of files in the specified directory and its subdirectories.
      %% if strategy() when del,  Files in this directory and its subdirectories will not be monitored.
      %% -type srcDirDescr() :: { Dir :: file:filename(), [Options :: compile_option()]}.
      %% Defaults value：undefined 监听当前工作目录
      %% Example: {extraDirs, [{addExtra, [{"./_build/default/lib/erlGbh", []}]}, {only, [{"./", []}]}, {del, [{"./_build", []}]}]}.
      %%{extraDirs, [{add, [{"./_build/default/lib/erlGbh", []}, {"./_build/default/lib/eSync/ebin", []}]}, {only, [{"./", []}]}, {del, [{"./_build", []}]}]}
      {extraDirs, [{strategy(), [srcDirDescr()]}]},

      %% 这个参数用来设置 怎么处理 当beam文件的源文件目录不是当前工作的子目录时的情况
	  %% This parameter is used to set how to deal with the situation when the source file directory of the beam file is not the current working subdirectory
      %% value list： fix | allow | ignore
      %% * fix = Try to find the source file in the current directory
      %% * allow = Do not do anything special, use the original path of the beam source file to find the file
      %% * ignore = Ignore any changes to its source path
      %% Defaults value: fix
      {descendant, fix},

		%% Beam update callback function, Format : undefined | {Mondule, Fun} | [{Mondule, Fun}, ...], The Fun function has only one parameter
		{onMSyncFun, undefined},

		%% config update callback function, Format: undefined | {Mondule, Fun} | [{Mondule, Fun}, ...], The Fun function has only one parameter
		{onCSyncFun, undefined},

		%% Whether to enable cluster synchronization loading
		{swSyncNode, false},

		%% Only compile in memory or compile and write beam to disk
		{isJustMem, false},

		%% If debug_info_key exists, the user needs to provide a function to get debug_info_key Format: undefined | {Mondule, Fun}
		%% this fun need return: {debug_info_key, xxx}
		{debugInfoKeyFun, undefined}
	]}
].


